#name: CI
#
#on:
#  push:
#  pull_request:
#  workflow_dispatch:
#
#permissions:
#  contents: read
#
#jobs:
#  linter:
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: ["3.12"]
#        os: [ubuntu-latest]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install project
#        run: make install
#      - name: Run linter
#        run: make lint
#
#  tests:
#    needs: linter
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: ["3.12"]
#        os: [ubuntu-latest]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#      - uses: adambirds/docker-compose-action@v1.3.0
#        with:
#          compose-file: "./tests/resources/docker/docker-compose.yml"
#      - name: Install project
#        run: make install
#      - name: Install driver
#        run: |
#          if ! [[ "18.04 20.04 22.04 24.04" == *"$(grep VERSION_ID /etc/os-release | cut -d '"' -f 2)"* ]]; then
#              echo "Ubuntu $(grep VERSION_ID /etc/os-release | cut -d '"' -f 2) is not currently supported."
#              exit
#          fi
#
#          curl -sSL -O https://packages.microsoft.com/config/ubuntu/$(grep VERSION_ID /etc/os-release | cut -d '"' -f 2)/packages-microsoft-prod.deb
#          sudo dpkg -i packages-microsoft-prod.deb
#          rm packages-microsoft-prod.deb
#
#          sudo apt-get update
#          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18
#          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
#          echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
#          source ~/.bashrc
#          sudo apt-get install -y unixodbc-dev
#
#      - name: Run tests
#        run: make test
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v5
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          fail_ci_if_error: true