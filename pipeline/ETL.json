{
	"name": "ETL",
	"properties": {
		"description": "Bronze, silver and gold for erp tables",
		"activities": [
			{
				"name": "DimProductRaw",
				"description": "Copy azure sql table \"dim_product\" to storage raw container.  Copy all rows.",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "BlobSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "{{ENV}}_erp_table",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "dim_product"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "{{ENV}}_sto_dataset",
						"type": "DatasetReference",
						"parameters": {
							"container": "raw",
							"file_name": {
								"value": "@concat(formatDateTime(utcNow(), 'yyyy_MM_dd'), '.parquet')",
								"type": "Expression"
							},
							"folder_path": "erp/dim_product/"
						}
					}
				]
			},
			{
				"name": "DimPartnerRaw",
				"description": "Copy azure sql table \"dim_partner\" to storage raw container.  Copy all rows.",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "BlobSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "{{ENV}}_erp_table",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "dim_partner"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "{{ENV}}_sto_dataset",
						"type": "DatasetReference",
						"parameters": {
							"container": "raw",
							"file_name": {
								"value": "@concat(formatDateTime(utcNow(), 'yyyy_MM_dd'), '.parquet')",
								"type": "Expression"
							},
							"folder_path": "erp/dim_partner/"
						}
					}
				]
			},
			{
				"name": "DimWarehouseRaw",
				"description": "Copy azure sql table \"dim_warehouse\" to storage raw container. Copy all rows.",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "BlobSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "{{ENV}}_erp_table",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "dim_warehouse"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "{{ENV}}_sto_dataset",
						"type": "DatasetReference",
						"parameters": {
							"container": "raw",
							"file_name": {
								"value": "@concat(formatDateTime(utcNow(), 'yyyy_MM_dd'), '.parquet')",
								"type": "Expression"
							},
							"folder_path": "erp/dim_warehouse/"
						}
					}
				]
			},
			{
				"name": "FactOrderRaw",
				"description": "Copy azure sql table \"fact_order\" to storage raw container. Copy only daily data.",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat(\n'SELECT * FROM fact_order WHERE created_at >= ''',\nformatDateTime(startOfDay(utcNow()), 'yyyy-MM-dd HH:mm:ss'),\n''' AND created_at < ''',\nformatDateTime(startOfDay(addDays(utcNow(), 1)), 'yyyy-MM-dd HH:mm:ss'),\n''''\n)",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "BlobSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "{{ENV}}_erp_table",
						"type": "DatasetReference",
						"parameters": {
							"table_name": "fact_order"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "{{ENV}}_sto_dataset",
						"type": "DatasetReference",
						"parameters": {
							"container": "raw",
							"file_name": {
								"value": "@concat(formatDateTime(utcNow(), 'yyyy_MM_dd'), '.parquet')",
								"type": "Expression"
							},
							"folder_path": "erp/fact_order/"
						}
					}
				]
			}
		],
		"folder": {
			"name": "ERP"
		},
		"annotations": []
	}
}